{"version":3,"sources":["components/Page.tsx","pages/CountdownPage.tsx","services/api.ts","services/spaceXApi.ts","constants/endpoints.ts","components/ErrorMessage.tsx","components/FavouriteButton.tsx","services/localStorage.ts","services/favourites.ts","components/LaunchesTable.tsx","containers/UpcomingLaunches.tsx","pages/LaunchesPage.tsx","components/Routes.tsx","App.tsx","index.tsx","constants/colours.ts"],"names":["Page","children","heading","Container","component","sx","mb","Paper","variant","my","xs","md","p","CountdownPage","Api","get","url","params","a","axios","response","data","SpaceXApi","upcomingLaunches","launches","ErrorMessage","message","style","display","justifyContent","alignItems","fill","FavouriteButton","onClick","isFavourite","cursor","LocalStorage","storeKey","existing","localStorage","getItem","Set","JSON","parse","set","array","Array","from","values","setItem","stringify","FAVOURITES_LOCAL_STORAGE_KEY","LaunchesTable","rows","useState","getSet","value","setValue","useCallback","newSet","writeSet","useFavourites","favourites","setFavourites","toggleFavourite","id","has","delete","add","TableContainer","Table","minWidth","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","name","date_unix","launchpad","border","scope","UpcomingLaunches","useQuery","isLoading","error","Skeleton","animation","LaunchesPage","styled","main","Routes","exact","path","theme","createTheme","App","ThemeProvider","CssBaseline","AppBar","position","color","elevation","borderBottom","t","palette","divider","Toolbar","Typography","noWrap","queryClient","QueryClient","GlobalStyle","createGlobalStyle","ReactDOM","render","QueryClientProvider","client","Fragment","basename","process","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.3d844fd6.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Paper } from '@mui/material';\n\ninterface Props {\n  heading: string;\n  children?: React.ReactElement | React.ReactElement[];\n}\n\nconst Page = ({ children, heading }: Props): JSX.Element => {\n  return (\n    <Container component=\"main\" sx={{ mb: 4 }}>\n      <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\n        <h3>{heading}</h3>\n        {children}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Page;\n","import React from 'react'\nimport Page from '../components/Page'\nexport const CountdownPage = ():JSX.Element=>\n{return (<Page heading={\"Countdown\"}><div>countdown</div></Page>)}","import axios from 'axios';\n\nconst Api = {\n  get: async (url: string, params?: unknown): Promise<unknown> => {\n    const response = await axios.get(url, { params });\n    return response?.data;\n  },\n};\n\nexport default Api;\n","import { LaunchSummaryDto } from 'models/launch';\nimport { UPCOMING_LAUNCHES_ENDPOINT } from '../constants/endpoints';\nimport Api from './api';\n\nconst SpaceXApi = {\n  upcomingLaunches: async (): Promise<LaunchSummaryDto[]> => {\n    const launches: LaunchSummaryDto[] = (await Api.get(UPCOMING_LAUNCHES_ENDPOINT)) as LaunchSummaryDto[];\n    return launches || [];\n  },\n};\n\nexport default SpaceXApi;\n","export const UPCOMING_LAUNCHES_ENDPOINT = ' https://api.spacexdata.com/v4/launches/upcoming';\n","import ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\n\ninterface ErrorMessageProps {\n  message: string;\n}\nexport const ErrorMessage = ({ message }: ErrorMessageProps): JSX.Element => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <p>\n        <ErrorOutlineIcon style={{ fill: 'red' }} />\n      </p>\n      <p>An error occured. {message}</p>\n    </div>\n  );\n};\n","import StarOutlineIcon from '@mui/icons-material/StarOutline';\nimport StarIcon from '@mui/icons-material/Star';\ninterface FavouriteButtonProps {\n  onClick: () => void;\n  isFavourite: boolean;\n}\nexport const FavouriteButton = ({ onClick, isFavourite }: FavouriteButtonProps): JSX.Element => {\n  return isFavourite ? (\n    <StarIcon onClick={onClick} style={{ cursor: 'pointer' }} />\n  ) : (\n    <StarOutlineIcon style={{ cursor: 'pointer' }} onClick={onClick} />\n  );\n};\n","export default class LocalStorage {\n  static getSet(storeKey: string): Set<string> | null {\n    const existing = localStorage.getItem(storeKey);\n    return existing ? new Set(JSON.parse(existing)) : null;\n  }\n  static writeSet(storeKey: string, set: Set<string>): void {\n    const array = Array.from(set.values());\n    localStorage.setItem(storeKey, JSON.stringify(array));\n  }\n}\n","import LocalStorage from './localStorage';\nimport { useCallback, useState } from 'react';\n\nconst FAVOURITES_LOCAL_STORAGE_KEY = 'favourites';\nexport const useFavourites = (): [Set<string>, (newSet: Set<string>) => void] => {\n  const [value, setValue] = useState(LocalStorage.getSet(FAVOURITES_LOCAL_STORAGE_KEY) ?? new Set<string>());\n  const updatedSetValue = useCallback(\n    (newSet: Set<string>) => {\n      LocalStorage.writeSet(FAVOURITES_LOCAL_STORAGE_KEY, newSet);\n      setValue(new Set(newSet.values())); //Make a new set due to the way react hooks detects state changes via obj references\n    },\n    [value, FAVOURITES_LOCAL_STORAGE_KEY],\n  );\n  return [value, updatedSetValue];\n};\n","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { LaunchSummaryDto } from '../models/launch';\nimport { FavouriteButton } from './FavouriteButton';\nimport { useFavourites } from '../services/favourites';\n\n// Adapted from https://mui.com/components/tables/\ninterface LaunchesTableProps {\n  rows?: LaunchSummaryDto[];\n}\n\nexport const LaunchesTable = ({ rows }: LaunchesTableProps): JSX.Element => {\n  const [favourites, setFavourites] = useFavourites();\n  const toggleFavourite = (id: string) => (): void => {\n    if (favourites.has(id)) {\n      favourites.delete(id);\n      setFavourites(favourites);\n    } else {\n      favourites.add(id);\n      setFavourites(favourites);\n    }\n  };\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Mission</TableCell>\n            <TableCell align=\"right\">Date (UTC)</TableCell>\n            <TableCell align=\"right\">LaunchPad</TableCell>\n            <TableCell align=\"right\">Favourite</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows ? (\n            rows.map(({ name, date_unix, launchpad, id }) => (\n              <TableRow key={name} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {name}\n                </TableCell>\n                <TableCell align=\"right\">{date_unix}</TableCell>\n                <TableCell align=\"right\">{launchpad}</TableCell>\n                <TableCell align=\"right\">\n                  <FavouriteButton onClick={toggleFavourite(id)} isFavourite={favourites.has(id)} />\n                </TableCell>\n              </TableRow>\n            ))\n          ) : (\n            <div>No data</div>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { useQuery } from 'react-query';\nimport SpaceXApi from '../services/spaceXApi';\nimport { LaunchesTable, ErrorMessage } from '../components';\nimport { Skeleton } from '@mui/material';\n\nexport const UpcomingLaunches = (): JSX.Element => {\n  const { isLoading, error, data } = useQuery('launches', SpaceXApi.upcomingLaunches);\n  return (\n    <>\n      {isLoading && (\n        <Skeleton animation=\"wave\">\n          <LaunchesTable />\n        </Skeleton>\n      )}\n      {error && <ErrorMessage message={error as string} />}\n      {!isLoading && !error && <LaunchesTable rows={data} />}\n    </>\n  );\n};\n","import React from 'react';\nimport Page from '../components/Page';\nimport { UpcomingLaunches } from '../containers/UpcomingLaunches';\n\nexport const LaunchesPage = (): JSX.Element => {\n  return (\n    <Page heading={'Launches'}>\n      <UpcomingLaunches />\n    </Page>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { Switch, Route } from 'react-router-dom';\nimport { CountdownPage, LaunchesPage } from 'pages';\n\nconst Container = styled.main`\n  grid-area: content;\n  display: flex;\n  flex: 1;\n  margin: 10px;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nconst Routes = (): JSX.Element => {\n  return (\n    <Container>\n      <Switch>\n        <Route exact path=\"/\">\n          <LaunchesPage />\n        </Route>\n        <Route path=\"/countdown\">\n          <CountdownPage />\n        </Route>\n      </Switch>\n    </Container>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport Routes from 'components/Routes';\nimport { AppBar, CssBaseline, ThemeProvider, Toolbar, Typography, createTheme } from '@mui/material';\n\nconst theme = createTheme();\n\nfunction App(): JSX.Element {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        color=\"default\"\n        elevation={0}\n        sx={{\n          position: 'relative',\n          borderBottom: (t) => `1px solid ${t.palette.divider}`,\n        }}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            SpaceX\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Routes />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { colours } from './constants';\nconst queryClient = new QueryClient();\n\nconst GlobalStyle = createGlobalStyle`\n  html, #root {\n    height: 100%;\n    background-color: ${colours.grey}\n  }\n\n  body {\n    height: 100%;\n    margin: 0;\n    font-family: 'Inter', 'system-ui', '-apple-system', sans-serif;\n  }\n`;\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <React.Fragment>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route path=\"/\" component={App} />\n      </Router>\n      <GlobalStyle />\n    </React.Fragment>\n    <ReactQueryDevtools initialIsOpen />\n  </QueryClientProvider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// import reportWebVitals from './reportWebVitals';\n// reportWebVitals(console.log);\n","export const colours = {\n  primary: '#3a529c',\n  secondary: '#1ca9f0',\n  white: '#ffffff',\n  black: '#000000',\n  grey: '#ededf7',\n  offWhite: '#f4f5f9',\n  navy: '#495576',\n};\n"],"sourceRoot":""}