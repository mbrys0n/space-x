{"version":3,"sources":["components/Page.tsx","pages/CountdownPage.tsx","pages/LaunchesPage.tsx","components/Routes.tsx","App.tsx","index.tsx","constants/colours.ts"],"names":["Page","children","heading","Container","component","maxWidth","sx","mb","Paper","variant","my","xs","md","p","CountdownPage","LaunchesPage","styled","main","Routes","exact","path","theme","createTheme","App","ThemeProvider","CssBaseline","AppBar","position","color","elevation","borderBottom","t","palette","divider","Toolbar","Typography","noWrap","queryClient","QueryClient","GlobalStyle","createGlobalStyle","ReactDOM","render","QueryClientProvider","client","Fragment","basename","process","initialIsOpen","document","getElementById"],"mappings":"iOAmBeA,EAXF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,QACxB,OACE,cAACC,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAAKC,GAAI,CAAEC,GAAI,GAApD,SACE,eAACC,EAAA,EAAD,CAAOC,QAAQ,WAAWH,GAAI,CAAEI,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAAKC,EAAG,CAAEF,GAAI,EAAGC,GAAI,IAAtE,UACE,6BAAKV,IACJD,QCXIa,EAAgB,WAC5B,OAAQ,cAAC,EAAD,CAAMZ,QAAS,YAAf,SAA4B,+CCAxBa,EAAe,WAC3B,OAAQ,cAAC,EAAD,CAAMb,QAAS,WAAf,SAA2B,8CCC9BC,EAAYa,IAAOC,KAAV,mEAAGD,CAAH,0FAwBAE,EAfA,WACb,OACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,Y,oDClBJC,EAAQC,cA0BCC,I,EAAAA,EAxBf,WACE,OACE,eAACC,EAAA,EAAD,CAAeH,MAAOA,EAAtB,UACE,cAACI,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CACEC,SAAS,WACTC,MAAM,UACNC,UAAW,EACXvB,GAAI,CACFqB,SAAU,WACVG,aAAc,SAACC,GAAD,0BAAoBA,EAAEC,QAAQC,WANhD,SASE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAY1B,QAAQ,KAAKmB,MAAM,UAAUQ,QAAM,EAA/C,wBAKJ,cAAC,EAAD,Q,wBCjBAC,EAAc,IAAIC,IAElBC,EAAcC,YAAH,wNCLT,WDkBRC,IAASC,OACP,eAACC,EAAA,EAAD,CAAqBC,OAAQP,EAA7B,UACE,eAAC,IAAMQ,SAAP,WACE,cAAC,IAAD,CAAQC,SAAUC,qBAAlB,SACE,cAAC,IAAD,CAAO3B,KAAK,IAAIhB,UAAWmB,MAE7B,cAACgB,EAAD,OAEF,cAAC,qBAAD,CAAoBS,eAAa,OAEnCC,SAASC,eAAe,W","file":"static/js/main.2be9855e.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Paper } from '@mui/material';\n\ninterface Props {\n  heading: string;\n  children?: React.ReactElement | React.ReactElement[];\n}\n\nconst Page = ({ children, heading }: Props): JSX.Element => {\n  return (\n    <Container component=\"main\" maxWidth=\"sm\" sx={{ mb: 4 }}>\n      <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\n        <h3>{heading}</h3>\n        {children}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Page;\n","import React from 'react'\nimport Page from '../components/Page'\nexport const CountdownPage = ():JSX.Element=>\n{return (<Page heading={\"Countdown\"}><div>countdown</div></Page>)}","import React from 'react'\nimport Page from '../components/Page';\n\nexport const LaunchesPage = ():JSX.Element=>\n{return (<Page heading={\"Launches\"}><div>launches</div></Page>)}","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { Switch, Route } from 'react-router-dom';\nimport { CountdownPage, LaunchesPage } from 'pages';\n\nconst Container = styled.main`\n  grid-area: content;\n  display: flex;\n  flex: 1;\n  margin: 10px;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nconst Routes = (): JSX.Element => {\n  return (\n    <Container>\n      <Switch>\n        <Route exact path=\"/\">\n          <LaunchesPage />\n        </Route>\n        <Route path=\"/countdown\">\n          <CountdownPage />\n        </Route>\n      </Switch>\n    </Container>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport Routes from 'components/Routes';\nimport { AppBar, CssBaseline, ThemeProvider, Toolbar, Typography, createTheme } from '@mui/material';\n\nconst theme = createTheme();\n\nfunction App(): JSX.Element {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        color=\"default\"\n        elevation={0}\n        sx={{\n          position: 'relative',\n          borderBottom: (t) => `1px solid ${t.palette.divider}`,\n        }}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            SpaceX\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Routes />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { colours } from './constants';\nconst queryClient = new QueryClient();\n\nconst GlobalStyle = createGlobalStyle`\n  html, #root {\n    height: 100%;\n    background-color: ${colours.grey}\n  }\n\n  body {\n    height: 100%;\n    margin: 0;\n    font-family: 'Inter', 'system-ui', '-apple-system', sans-serif;\n  }\n`;\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <React.Fragment>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route path=\"/\" component={App} />\n      </Router>\n      <GlobalStyle />\n    </React.Fragment>\n    <ReactQueryDevtools initialIsOpen />\n  </QueryClientProvider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// import reportWebVitals from './reportWebVitals';\n// reportWebVitals(console.log);\n","export const colours = {\n  primary: '#3a529c',\n  secondary: '#1ca9f0',\n  white: '#ffffff',\n  black: '#000000',\n  grey: '#ededf7',\n  offWhite: '#f4f5f9',\n  navy: '#495576',\n};\n"],"sourceRoot":""}