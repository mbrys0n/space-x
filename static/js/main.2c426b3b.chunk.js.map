{"version":3,"sources":["components/Page.tsx","constants/endpoints.ts","services/api.ts","services/spaceXApi.ts","components/CountdownTimer.tsx","components/ErrorMessage.tsx","components/FavouriteButton.tsx","services/localStorage.ts","services/favourites.ts","components/LaunchesTable.tsx","containers/Countdown.tsx","pages/CountdownPage.tsx","containers/UpcomingLaunches.tsx","pages/LaunchesPage.tsx","containers/FavouriteLaunches.tsx","pages/FavouritesPage.tsx","components/Routes.tsx","components/ResponsiveAppBar.tsx","App.tsx","index.tsx","constants/colours.ts"],"names":["Page","children","heading","Container","component","sx","mb","Paper","variant","my","xs","md","p","SPACEX_DOMAIN","ALL_LAUNCHES_ENDPOINT","UPCOMING_LAUNCHES_ENDPOINT","NEXT_LAUNCH_ENDPOINT","Api","get","url","params","a","axios","response","data","SpaceXApi","upcomingLaunches","launches","allLaunches","nextLaunch","calculateTimeDeltaFromNow","parsedDT","diffNow","CountdownTimer","useState","days","hours","minutes","seconds","setTimeDelta","useEffect","setInterval","Math","floor","ErrorMessage","message","style","display","justifyContent","alignItems","fill","FavouriteButton","onClick","isFavourite","cursor","LocalStorage","storeKey","existing","localStorage","getItem","Set","JSON","parse","set","array","Array","from","values","setItem","stringify","FAVOURITES_LOCAL_STORAGE_KEY","useFavourites","getSet","value","setValue","useCallback","newSet","writeSet","LaunchesTable","rows","includeFavouriteColumn","favourites","setFavourites","toggleFavourite","id","has","delete","add","TableContainer","Table","minWidth","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","name","date_utc","launchpad","border","scope","Countdown","useQuery","isLoading","error","Skeleton","animation","DateTime","fromISO","parseLaunchData","CountdownPage","UpcomingLaunches","LaunchesPage","FavouriteLaunches","filter","FavouritesPage","styled","main","Routes","exact","path","pages","Favourites","withRouter","history","React","anchorElNav","setAnchorElNav","handleCloseNavMenu","handleMenuItemClick","console","log","push","AppBar","position","maxWidth","Toolbar","disableGutters","Typography","noWrap","mr","Box","flexGrow","IconButton","size","aria-controls","aria-haspopup","event","currentTarget","color","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","Object","entries","pageTitle","pageUrl","MenuItem","textAlign","Button","theme","createTheme","App","ThemeProvider","CssBaseline","queryClient","QueryClient","GlobalStyle","createGlobalStyle","ReactDOM","render","QueryClientProvider","client","Fragment","basename","process","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.2c426b3b.chunk.js","sourcesContent":["import React from 'react';\nimport { Container, Paper } from '@mui/material';\n\ninterface Props {\n  heading: string;\n  children?: React.ReactElement | React.ReactElement[];\n}\n\nconst Page = ({ children, heading }: Props): JSX.Element => {\n  return (\n    <Container component=\"main\" sx={{ mb: 4 }}>\n      <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\n        <h3>{heading}</h3>\n        {children}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Page;\n","const SPACEX_DOMAIN = 'https://api.spacexdata.com/v4';\nexport const ALL_LAUNCHES_ENDPOINT = `${SPACEX_DOMAIN}/launches`;\nexport const UPCOMING_LAUNCHES_ENDPOINT = `${SPACEX_DOMAIN}/launches/upcoming`;\nexport const NEXT_LAUNCH_ENDPOINT = `${SPACEX_DOMAIN}/launches/next`;\n","import axios from 'axios';\n\nconst Api = {\n  get: async (url: string, params?: unknown): Promise<unknown> => {\n    const response = await axios.get(url, { params });\n    return response?.data;\n  },\n};\n\nexport default Api;\n","import { LaunchSummaryDto, NextLaunchDto } from 'models/launch';\nimport { ALL_LAUNCHES_ENDPOINT, NEXT_LAUNCH_ENDPOINT, UPCOMING_LAUNCHES_ENDPOINT } from '../constants/endpoints';\nimport Api from './api';\n\nconst SpaceXApi = {\n  upcomingLaunches: async (): Promise<LaunchSummaryDto[]> => {\n    const launches: LaunchSummaryDto[] = (await Api.get(UPCOMING_LAUNCHES_ENDPOINT)) as LaunchSummaryDto[];\n    return launches || [];\n  },\n  allLaunches: async (): Promise<LaunchSummaryDto[]> => {\n    return (await Api.get(ALL_LAUNCHES_ENDPOINT)) as LaunchSummaryDto[];\n  },\n  nextLaunch: async (): Promise<NextLaunchDto> => {\n    return (await Api.get(NEXT_LAUNCH_ENDPOINT)) as NextLaunchDto;\n  },\n};\n\nexport default SpaceXApi;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { DateTime } from 'luxon';\n\ninterface TimerProps {\n  parsedDT: DateTime;\n}\nconst calculateTimeDeltaFromNow = (parsedDT: DateTime) => parsedDT.diffNow(['days', 'hours', 'minutes', 'second']);\n\nconst CountdownTimer = ({ parsedDT }: TimerProps): JSX.Element => {\n  const [{ days, hours, minutes, seconds }, setTimeDelta] = useState(calculateTimeDeltaFromNow(parsedDT));\n\n  useEffect(() => {\n    setInterval(() => setTimeDelta(calculateTimeDeltaFromNow(parsedDT)), 1000);\n  });\n  return (\n    <h1>\n      {days} days : {hours} hours : {minutes} minutes : {Math.floor(seconds)} seconds\n    </h1>\n  );\n};\n\nexport default CountdownTimer;\n","import ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\n\ninterface ErrorMessageProps {\n  message: string;\n}\nexport const ErrorMessage = ({ message }: ErrorMessageProps): JSX.Element => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <p>\n        <ErrorOutlineIcon style={{ fill: 'red' }} />\n      </p>\n      <p>An error occured. {message}</p>\n    </div>\n  );\n};\n","import StarOutlineIcon from '@mui/icons-material/StarOutline';\nimport StarIcon from '@mui/icons-material/Star';\ninterface FavouriteButtonProps {\n  onClick: () => void;\n  isFavourite: boolean;\n}\nexport const FavouriteButton = ({ onClick, isFavourite }: FavouriteButtonProps): JSX.Element => {\n  return isFavourite ? (\n    <StarIcon onClick={onClick} style={{ cursor: 'pointer' }} />\n  ) : (\n    <StarOutlineIcon style={{ cursor: 'pointer' }} onClick={onClick} />\n  );\n};\n","export default class LocalStorage {\n  static getSet(storeKey: string): Set<string> | null {\n    const existing = localStorage.getItem(storeKey);\n    return existing ? new Set(JSON.parse(existing)) : null;\n  }\n  static writeSet(storeKey: string, set: Set<string>): void {\n    const array = Array.from(set.values());\n    localStorage.setItem(storeKey, JSON.stringify(array));\n  }\n}\n","import LocalStorage from './localStorage';\nimport { useCallback, useState } from 'react';\n\nconst FAVOURITES_LOCAL_STORAGE_KEY = 'favourites';\nexport const useFavourites = (): [Set<string>, (newSet: Set<string>) => void] => {\n  const [value, setValue] = useState(LocalStorage.getSet(FAVOURITES_LOCAL_STORAGE_KEY) ?? new Set<string>());\n  const updatedSetValue = useCallback(\n    (newSet: Set<string>) => {\n      LocalStorage.writeSet(FAVOURITES_LOCAL_STORAGE_KEY, newSet);\n      setValue(new Set(newSet.values())); //Make a new set due to the way react hooks detects state changes via obj references\n    },\n    [value, FAVOURITES_LOCAL_STORAGE_KEY],\n  );\n  return [value, updatedSetValue];\n};\n","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { LaunchSummaryDto } from '../models/launch';\nimport { FavouriteButton } from './FavouriteButton';\nimport { useFavourites } from '../services/favourites';\n\n// Adapted from https://mui.com/components/tables/\ninterface LaunchesTableProps {\n  rows?: LaunchSummaryDto[];\n  includeFavouriteColumn?: boolean;\n}\n\nexport const LaunchesTable = ({ rows, includeFavouriteColumn = true }: LaunchesTableProps): JSX.Element => {\n  const [favourites, setFavourites] = useFavourites();\n  const toggleFavourite = (id: string) => (): void => {\n    if (favourites.has(id)) {\n      favourites.delete(id);\n      setFavourites(favourites);\n    } else {\n      favourites.add(id);\n      setFavourites(favourites);\n    }\n  };\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Mission</TableCell>\n            <TableCell align=\"right\">Date (UTC)</TableCell>\n            <TableCell align=\"right\">LaunchPad</TableCell>\n            {includeFavouriteColumn && <TableCell align=\"right\">Favourite</TableCell>}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows ? (\n            rows.map(({ name, date_utc, launchpad, id }) => (\n              <TableRow key={name} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {name}\n                </TableCell>\n                <TableCell align=\"right\">{date_utc}</TableCell>\n                <TableCell align=\"right\">{launchpad}</TableCell>\n                {includeFavouriteColumn && (\n                  <TableCell align=\"right\">\n                    <FavouriteButton onClick={toggleFavourite(id)} isFavourite={favourites.has(id)} />\n                  </TableCell>\n                )}\n              </TableRow>\n            ))\n          ) : (\n            <div>No data</div>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n","import { useQuery } from 'react-query';\nimport SpaceXApi from '../services/spaceXApi';\nimport CountdownTimer from '../components/CountdownTimer';\nimport { DateTime } from 'luxon';\nimport { Skeleton } from '@mui/material';\nimport { ErrorMessage } from '../components';\n\nexport const Countdown = (): JSX.Element => {\n  const { isLoading, error, data } = useQuery('nextLaunch', SpaceXApi.nextLaunch);\n\n  const parseLaunchData = ({ date_utc }: { date_utc: string }) => DateTime.fromISO(date_utc);\n  return (\n    <>\n      {isLoading && <Skeleton animation=\"wave\" />}\n      {error && <ErrorMessage message={error as string} />}\n      {!isLoading && !error && data && <CountdownTimer parsedDT={parseLaunchData(data)} />}\n    </>\n  );\n};\n","import React from 'react';\nimport Page from '../components/Page';\nimport { Countdown } from '../containers/Countdown';\nexport const CountdownPage = (): JSX.Element => {\n  return (\n    <Page heading={'Countdown'}>\n      <Countdown />\n    </Page>\n  );\n};\n","import { useQuery } from 'react-query';\nimport SpaceXApi from '../services/spaceXApi';\nimport { LaunchesTable, ErrorMessage } from '../components';\nimport { Skeleton } from '@mui/material';\n\nexport const UpcomingLaunches = (): JSX.Element => {\n  const { isLoading, error, data } = useQuery('launches', SpaceXApi.upcomingLaunches);\n  return (\n    <>\n      {isLoading && (\n        <Skeleton animation=\"wave\">\n          <LaunchesTable />\n        </Skeleton>\n      )}\n      {error && <ErrorMessage message={error as string} />}\n      {!isLoading && !error && <LaunchesTable rows={data} />}\n    </>\n  );\n};\n","import React from 'react';\nimport Page from '../components/Page';\nimport { UpcomingLaunches } from '../containers/UpcomingLaunches';\n\nexport const LaunchesPage = (): JSX.Element => {\n  return (\n    <Page heading={'Launches'}>\n      <UpcomingLaunches />\n    </Page>\n  );\n};\n","import { useQuery } from 'react-query';\nimport SpaceXApi from '../services/spaceXApi';\nimport { LaunchesTable, ErrorMessage } from '../components';\nimport { Skeleton } from '@mui/material';\nimport { useFavourites } from '../services/favourites';\n\nexport const FavouriteLaunches = (): JSX.Element => {\n  const { isLoading, error, data } = useQuery('launches', SpaceXApi.allLaunches);\n  const [favourites] = useFavourites();\n  return (\n    <>\n      {isLoading && (\n        <Skeleton animation=\"wave\">\n          <LaunchesTable />\n        </Skeleton>\n      )}\n      {error && <ErrorMessage message={error as string} />}\n      {!isLoading && !error && data && <LaunchesTable rows={data.filter(({ id }) => favourites.has(id))} includeFavouriteColumn={false} />}\n    </>\n  );\n};\n","import React from 'react';\nimport Page from '../components/Page';\nimport { FavouriteLaunches } from '../containers/FavouriteLaunches';\n\nexport const FavouritesPage = (): JSX.Element => {\n  return (\n    <Page heading={'Favourite Launches'}>\n      <FavouriteLaunches />\n    </Page>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { Switch, Route } from 'react-router-dom';\nimport { CountdownPage, LaunchesPage } from 'pages';\nimport { FavouritesPage } from '../pages/FavouritesPage';\n\nconst Container = styled.main`\n  grid-area: content;\n  display: flex;\n  flex: 1;\n  margin: 10px;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nconst Routes = (): JSX.Element => {\n  return (\n    <Container>\n      <Switch>\n        <Route exact path=\"/\">\n          <LaunchesPage />\n        </Route>\n        <Route path=\"/countdown\">\n          <CountdownPage />\n        </Route>\n        <Route path=\"/favourites\">\n          <FavouritesPage />\n        </Route>\n      </Switch>\n    </Container>\n  );\n};\n\nexport default Routes;\n","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Button from '@mui/material/Button';\nimport MenuItem from '@mui/material/MenuItem';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nconst pages = { 'Upcoming Launches': '/', Favourites: '/favourites', Countdown: '/countdown' };\n//Adapted from https://mui.com/components/app-bar/#app-bar-with-responsive-menu\n\nconst ResponsiveAppBar = ({ history }: RouteComponentProps): JSX.Element => {\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\n\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorElNav(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleMenuItemClick = (url: string) => () => {\n    console.log('clicked', url);\n    history.push(url);\n    handleCloseNavMenu();\n  };\n\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters>\n          <Typography variant=\"h6\" noWrap component=\"div\" sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}>\n            Space-X\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {Object.entries(pages).map(([pageTitle, pageUrl]) => (\n                <MenuItem key={pageTitle} onClick={handleMenuItemClick(pageUrl)}>\n                  <Typography textAlign=\"center\">{pageTitle}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography variant=\"h6\" noWrap component=\"div\" sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            Space-x\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {Object.entries(pages).map(([pageTitle, pageUrl]) => (\n              <Button key={pageTitle} sx={{ my: 2, color: 'white', display: 'block' }} onClick={handleMenuItemClick(pageUrl)}>\n                {pageTitle}\n              </Button>\n            ))}\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default withRouter(ResponsiveAppBar);\n","import React from 'react';\nimport Routes from 'components/Routes';\nimport { CssBaseline, ThemeProvider, createTheme } from '@mui/material';\nimport ResponsiveAppBar from './components/ResponsiveAppBar';\n\nconst theme = createTheme();\n\nfunction App(): JSX.Element {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <ResponsiveAppBar />\n      <Routes />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport { colours } from './constants';\nconst queryClient = new QueryClient();\n\nconst GlobalStyle = createGlobalStyle`\n  html, #root {\n    height: 100%;\n    background-color: ${colours.grey}\n  }\n\n  body {\n    height: 100%;\n    margin: 0;\n    font-family: 'Inter', 'system-ui', '-apple-system', sans-serif;\n  }\n`;\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <React.Fragment>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route path=\"/\" component={App} />\n      </Router>\n      <GlobalStyle />\n    </React.Fragment>\n    <ReactQueryDevtools initialIsOpen />\n  </QueryClientProvider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// import reportWebVitals from './reportWebVitals';\n// reportWebVitals(console.log);\n","export const colours = {\n  primary: '#3a529c',\n  secondary: '#1ca9f0',\n  white: '#ffffff',\n  black: '#000000',\n  grey: '#ededf7',\n  offWhite: '#f4f5f9',\n  navy: '#495576',\n};\n"],"sourceRoot":""}